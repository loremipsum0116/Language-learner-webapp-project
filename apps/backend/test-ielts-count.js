// server/test-ielts-count.js
// IELTS-A Îã®Ïñ¥ Í∞úÏàò ÌÖåÏä§Ìä∏

const { prisma } = require('./lib/prismaClient');

async function testIeltsCount() {
    try {
        console.log('üîç Testing IELTS-A word count...\n');
        
        // 1. Ïπ¥ÌÖåÍ≥†Î¶¨ Ï†ïÎ≥¥ ÌôïÏù∏
        const category = await prisma.$queryRaw`
            SELECT * FROM exam_categories WHERE name = 'IELTS-A'
        `;
        
        console.log('üìä IELTS-A Category:');
        console.log(`   totalWords: ${category[0].totalWords}`);
        
        // 2. Ïã§Ï†ú DB Îã®Ïñ¥ Í∞úÏàò
        const dbCount = await prisma.$queryRaw`
            SELECT COUNT(*) as total
            FROM vocab v
            INNER JOIN vocab_exam_categories vec ON v.id = vec.vocabId
            WHERE vec.examCategoryId = ${category[0].id}
        `;
        
        console.log(`   DB count: ${dbCount[0].total}`);
        
        // 3. API ÏãúÎÆ¨Î†àÏù¥ÏÖòÏúºÎ°ú Î™®Îì† Îã®Ïñ¥ Ï°∞Ìöå
        const allVocabs = await prisma.$queryRaw`
            SELECT v.id, v.lemma
            FROM vocab v
            INNER JOIN vocab_exam_categories vec ON v.id = vec.vocabId
            WHERE vec.examCategoryId = ${category[0].id}
            ORDER BY vec.priority DESC, v.lemma ASC
        `;
        
        console.log(`   All vocabs query result: ${allVocabs.length}`);
        
        // 4. limit=5300ÏúºÎ°ú API Ìò∏Ï∂ú ÏãúÎÆ¨Î†àÏù¥ÏÖò
        const limitedVocabs = await prisma.$queryRaw`
            SELECT v.id, v.lemma
            FROM vocab v
            INNER JOIN vocab_exam_categories vec ON v.id = vec.vocabId
            WHERE vec.examCategoryId = ${category[0].id}
            ORDER BY vec.priority DESC, v.lemma ASC
            LIMIT 5300
        `;
        
        console.log(`   With LIMIT 5300: ${limitedVocabs.length}`);
        
        // 5. JSON ÌååÏùºÏóêÏÑú IELTS Í∞úÏàò ÌôïÏù∏
        const fs = require('fs');
        const cefrVocabs = JSON.parse(fs.readFileSync('./cefr_vocabs.json', 'utf8'));
        
        const ieltsWords = cefrVocabs.filter(vocab => 
            vocab.categories && vocab.categories.includes('IELTS')
        );
        
        console.log(`   JSON IELTS words: ${ieltsWords.length}`);
        
        const ieltsAWords = cefrVocabs.filter(vocab => 
            vocab.categories && vocab.categories.includes('IELTS-A')
        );
        
        console.log(`   JSON IELTS-A words: ${ieltsAWords.length}`);
        
    } catch (error) {
        console.error('‚ùå Error testing IELTS count:', error);
    } finally {
        await prisma.$disconnect();
    }
}

testIeltsCount();