{
  "permissions": {
    "allow": [
      "Bash(npm test:*)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(npx jest:*)",
      "Read(/Users/simhyunseok/Desktop/Node_PJ/**)",
      "Bash(pnpm install:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm --filter @language-learner/core build)",
      "Bash(pnpm --filter @language-learner/frontend build)",
      "Bash(pnpm ls:*)",
      "Bash(pnpm -r ls --depth=0)",
      "Bash(pnpm prisma generate:*)",
      "Bash(pnpm --filter @language-learner/backend dev)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm --filter @language-learner/backend test:coverage)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(npx react-native:*)",
      "Bash(npx @react-native-community/cli init:*)",
      "Bash(rmdir:*)",
      "Bash(tree:*)",
      "Bash(pod install:*)",
      "Bash(find:*)",
      "Bash(npm start)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0)",
      "Bash(timeout:*)",
      "Bash(wmic:*)",
      "Bash(set ANDROID_AVD_HOME=D:Androidavd)",
      "Bash(export ANDROID_AVD_HOME=\"D:/Android/avd\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0 -data-dir \"D:/Android/avd\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -list-avds)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\cmdline-tools\\latest\\bin\\avdmanager.bat\" create avd -n \"Small_Phone_D\" -k \"system-images;android-36;google_apis_playstore;x86_64\" -d \"pixel_2\" --path \"D:\\Android\\avd\\Small_Phone_D\" --force)",
      "Read(C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk/**)",
      "Bash(ANDROID_AVD_HOME=/d/Android/avd \"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0)",
      "Bash(export PATH=\"$PATH:/c/Users/sst70/AppData/Local/Android/Sdk/platform-tools\")",
      "Bash(export ANDROID_HOME=\"C:/Users/sst70/AppData/Local/Android/Sdk\")",
      "Bash(./gradlew:*)",
      "Bash(export GRADLE_USER_HOME=\"D:/Gradle\")",
      "Read(D:\\ReactNativeApp\\LanguageLearnerApp/**)",
      "Bash(npm uninstall:*)",
      "Bash(robocopy:*)",
      "Bash(xcopy:*)",
      "Bash(cd:*)",
      "Bash(dir:*)",
      "Read(C:\\Users\\sst70\\OneDrive/**)",
      "Read(D:\\ReactNativeApp\\LanguageLearnerApp/**)",
      "Bash(npm run android:*)",
      "Bash(adb:*)",
      "Bash(npx create-expo-app:*)",
      "Bash(python:*)",
      "Bash(npx expo start:*)",
      "Bash(start http://localhost:8082)",
      "Bash(start http://localhost:8084)",
      "Bash(start http://localhost:19000)",
      "Read(c:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\src\\navigation/**)",
      "Bash(start:*)",
      "Bash(rd:*)",
      "Bash(del metro.config.js)",
      "Bash(powershell:*)",
      "Bash(taskkill:*)",
      "Bash(npx expo install:*)",
      "Bash(npm run web:*)",
      "mcp__ide__getDiagnostics",
      "Bash(sed:*)",
      "Bash(del nul)",
      "Bash(rm:*)",
      "Bash(npx tsc:*)",
      "Bash(system_profiler SPUSBDataType)",
      "Bash(xcrun devicectl list:*)",
      "Bash(xcrun instruments:*)",
      "Bash(xcrun simctl list:*)",
      "Bash(sudo xcode-select:*)",
      "Bash(sudo gem install:*)",
      "Bash(pod:*)",
      "Bash(brew install:*)",
      "Bash(react-native start:*)",
      "Bash(open ios/LanguageLearnerApp.xcworkspace)",
      "Bash(npx expo run:ios:*)",
      "Bash(open:*)",
      "Bash(xcodebuild:*)",
      "Bash(pkill:*)",
      "Bash(xcrun simctl install:*)",
      "Bash(xcrun simctl launch:*)",
      "Bash(watchman watch-del-all:*)",
      "Bash(npx @react-native-community/cli:*)",
      "Bash(killall:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(do echo \"Processing $file...\")",
      "Bash(xcrun simctl shutdown:*)",
      "Bash(xcrun simctl boot:*)",
      "Bash(export EDITOR=echo)",
      "Bash(EDITOR=echo npx react-native start --reset-cache --port 8083)",
      "Bash(EDITOR=echo npx react-native start --reset-cache --port 8084)",
      "Bash(lsof:*)",
      "Read(//Users/simhyunseok/Desktop/**)",
      "Bash(pnpm prisma:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"그렇게 합시다.\" pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(pnpm start:*)",
      "Bash(pnpm add:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(npm cache clean:*)",
      "Bash(xcrun simctl keyboardwithsimulator:*)",
      "Bash(xcrun simctl terminate:*)",
      "Bash(kill:*)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" devices)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Pixel_3a_API_33)",
      "Bash(cmd /c \"C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\run_emulator.bat\")",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Bash(set ANDROID_SDK_ROOT=C:Userssst70AppDataLocalAndroidSdk)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Pixel_3a_API_36)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android\\gradle\\wrapper/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android\\app/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android\\app/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\android\\app/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Read(/C:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp/**)",
      "Bash(set GRADLE_USER_HOME=D:Gradle)",
      "Bash(gradlew:*)",
      "Bash(.gradlew.bat clean)",
      "Bash(cmd /c:*)",
      "Bash(set GRADLE_USER_HOME=\"D:\\Gradle\")",
      "Bash(set ANDROID_HOME=\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\")",
      "Bash(set PATH=\"%ANDROID_HOME%\\platform-tools;%PATH%\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell pm list packages)",
      "Bash(.gradlew.bat installDebug)",
      "Bash(npx expo run:android:*)",
      "Bash(npx eas build:*)",
      "Bash(set ANDROID_SDK_ROOT=D:AndroidSdk)",
      "Bash(set ANDROID_HOME=D:AndroidSdk)",
      "Bash(\"D:\\Android\\Sdk\\emulator\\emulator.exe\" -avd Pixel_3a_API_36 -memory 2048 -partition-size 2048)",
      "Bash(\"D:\\Android\\Sdk\\platform-tools\\adb.exe\" devices)",
      "Bash(set PATH=D:AndroidSdkplatform-tools)",
      "Bash(D:AndroidSdktools)",
      "Bash(D:AndroidSdkcmdline-toolslatestbin)",
      "Bash(%PATH%)",
      "Bash(\"D:\\Android\\Sdk\\cmdline-tools\\latest\\bin\\sdkmanager.bat\" --licenses)",
      "Bash(set ANDROID_HOME=C:Userssst70AppDataLocalAndroidSdk)",
      "Bash(set PATH=%PATH%)",
      "Bash(C:Userssst70AppDataLocalAndroidSdkplatform-tools)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -n host.exp.exponent/host.exp.exponent.LauncherActivity)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8090\")",
      "Bash(set REACT_NATIVE_PROJECT_ROOT=C:dev)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8091\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" install -r \"https://d1ahtucjixef4r.cloudfront.net/Exponent-2.31.6.apk\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8093\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell input keyevent 82)",
      "Bash(del package-lock.json)",
      "Bash(move App.tsx App.js)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8099\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8100\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8101\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8102\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8103\")",
      "Bash(tasklist:*)",
      "Bash(\"D:\\Android\\Sdk\\platform-tools\\adb.exe\" shell am start -a android.intent.action.VIEW -d \"exp://192.168.45.175:8105\")",
      "Bash(\"D:\\Android\\Sdk\\platform-tools\\adb.exe\" shell input keyevent 82)",
      "Bash(npx prisma:*)",
      "Bash(mysql:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"그럽시다\" pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(xcrun xctrace:*)",
      "Read(//tmp/**)",
      "Bash(xcrun simctl create:*)",
      "Bash(osascript:*)",
      "Bash(xcrun devicectl device list:*)",
      "Bash(cat:*)",
      "Bash(npm update)",
      "Bash(xcrun devicectl device:*)",
      "Bash(EXPO_USE_TOOLS=1 npx expo run:ios)",
      "Bash(npx tsx:*)",
      "Bash(sudo:*)",
      "Bash(git restore:*)",
      "Bash(git rm:*)",
      "Bash(ls:*)",
      "Bash(watchman watch-del:*)",
      "Bash(watchman watch-project:*)",
      "Bash(EXPO_USE_TOOLS=1 npx expo run:ios --device)",
      "Read(//private/var/db/lockdown/**)",
      "Bash(npx expo prebuild:*)",
      "Bash(top:*)",
      "Bash(DISABLE_ESLINT_PLUGIN=true npm start)",
      "Bash(DISABLE_ESLINT_PLUGIN=true pnpm start)",
      "Bash(pnpm --filter @language-learner/backend install)",
      "Bash(set DATABASE_URL=\"mysql://root:tlagustjr!23@127.0.0.1:3306/mysql\")",
      "Bash(npx dotenv -e .env -- npx tsx prisma/seed-cefr-vocabs.ts:*)",
      "Bash(npx dotenv -e .env -- npx prisma db push:*)",
      "Bash(pnpm --filter @language-learner/frontend install)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"그럽시디\" npx dotenv -e .env -- npx prisma db push --force-reset --accept-data-loss)",
      "Bash(npx dotenv -e .env -- npx tsx prisma/seed-cefr-vocabs-fixed.ts:*)",
      "Read(//c/Users/sst70/**)",
      "Bash(pnpm dev:*)",
      "Bash(PORT=3001 pnpm start)",
      "Bash(npx dotenv -e .env -- npx tsx prisma/seed-jlpt-vocabs.ts:*)",
      "Bash(pnpm --filter @language-learner/frontend start)",
      "Bash(PORT=3001 pnpm --filter @language-learner/frontend start)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- npx tsx prisma/seed-cefr-vocabs.ts)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- npx prisma db push --force-reset --accept-data-loss)",
      "Bash(copy:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" pnpm dotenv -e .env -- pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(netstat:*)",
      "Bash(gcloud config:*)",
      "Bash(npx dotenv -e .env -- npx tsx seed-jlpt-vocabs.ts:*)",
      "Bash(npx dotenv -e .env -- node:*)",
      "Bash(cp:*)",
      "Bash(npx dotenv -e:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- npx tsx seed-jlpt-vocabs.ts)",
      "Bash(xargs kill:*)",
      "Bash(pnpm --filter @language-learner/backend prisma studio:*)",
      "Read(///**)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node seed-cefr-fixed.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node seed-exam-categories.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node seed-idioms-vocab.js)",
      "Bash(del \"C:\\Users\\sst70\\OneDrive\\바탕 화면\\Language-learner\\web\\apps\\backend\\check-japanese-data.js\")",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- npx tsx ../../../succeed-seeding-file/seed-cefr-fixed.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node ../../../succeed-seeding-file/seed-idioms-vocab.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node ../../../succeed-seeding-file/seed-cefr-fixed.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node ../../../succeed-seeding-file/seed-exam-categories.js)",
      "Bash(do mv \"$dir\" \"../n4/\")",
      "Bash(do cp -r \"$dir\"* \"../n4/$dir\")",
      "Bash(git config:*)",
      "Bash(git stash:*)",
      "Bash(do)",
      "Bash(do echo \"=== $dir Listening 폴더 ===\")",
      "Bash(do echo \"=== $dir 폴더 구조 ===\")",
      "Bash(do echo \"=== $dir Listening 폴더 내용 ===\")",
      "Bash(do echo \"=== $dir 오디오 폴더 확인 ===\")",
      "Bash(do echo \"=== $level passage.txt 확인 ===\")",
      "Bash(do echo \"=== $level Reading JSON 확인 ===\")",
      "Bash(xargs ls:*)",
      "Bash(do mkdir -p \"web/apps/frontend/public/$level/$level_Listening/$level_Listening_mix\")",
      "Bash(__NEW_LINE__ if [ -d \"$source_dir\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(if [ -d \"web/apps/backend/$level/$level_$i\" ])",
      "Bash(git fetch:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node seed-japanese-reading.js)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" node seed-japanese-reading.js)",
      "Bash(python3:*)",
      "Bash(findstr:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" npx dotenv -e .env -- node seed-jlpt-vocabs-total.js)",
      "Bash(pnpm:*)",
      "Bash(npm run build:*)",
      "Bash(deploy.bat)",
      "Bash(railway login:*)",
      "Bash(gcloud:*)",
      "Read(//Users/simhyunseok/Downloads/**)",
      "Bash(gsutil ls:*)",
      "Bash(gsutil -m cp -r /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/*/audio /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/*/*_Listening*/*_mix /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/starter /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/elementary /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/intermediate /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/upper /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/advanced /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/idiom /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/phrasal_verb /Users/simhyunseok/Desktop/Node_PJ/language-learner-web-project/web/apps/backend/public/jlpt gs://language-learner-audio/)",
      "Bash(gsutil -m rm -r gs://language-learner-audio/*)",
      "Bash(gsutil rm:*)",
      "Bash(gsutil -m rm -r gs://language-learner-audio/**/*)",
      "Bash(xargs:*)",
      "Bash(gsutil iam:*)"
    ],
    "deny": [],
    "ask": []
  }
}