{
  "permissions": {
    "allow": [
      "Bash(npm test:*)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(npx jest:*)",
      "Read(/Users/simhyunseok/Desktop/Node_PJ/**)",
      "Bash(pnpm install:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm --filter @language-learner/core build)",
      "Bash(pnpm --filter @language-learner/frontend build)",
      "Bash(pnpm ls:*)",
      "Bash(pnpm -r ls --depth=0)",
      "Bash(pnpm prisma generate:*)",
      "Bash(pnpm --filter @language-learner/backend dev)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm --filter @language-learner/backend test:coverage)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(npx react-native:*)",
      "Bash(npx @react-native-community/cli init:*)",
      "Bash(rmdir:*)",
      "Bash(tree:*)",
      "Bash(pod install:*)",
      "Bash(find:*)",
      "Bash(npm start)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0)",
      "Bash(timeout:*)",
      "Bash(wmic:*)",
      "Bash(set ANDROID_AVD_HOME=D:Androidavd)",
      "Bash(export ANDROID_AVD_HOME=\"D:/Android/avd\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0 -data-dir \"D:/Android/avd\")",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -list-avds)",
      "Bash(\"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\cmdline-tools\\latest\\bin\\avdmanager.bat\" create avd -n \"Small_Phone_D\" -k \"system-images;android-36;google_apis_playstore;x86_64\" -d \"pixel_2\" --path \"D:\\Android\\avd\\Small_Phone_D\" --force)",
      "Read(C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk/**)",
      "Bash(ANDROID_AVD_HOME=/d/Android/avd \"C:\\Users\\sst70\\AppData\\Local\\Android\\Sdk\\emulator\\emulator.exe\" -avd Medium_Phone_API_36.0)",
      "Bash(export PATH=\"$PATH:/c/Users/sst70/AppData/Local/Android/Sdk/platform-tools\")",
      "Bash(export ANDROID_HOME=\"C:/Users/sst70/AppData/Local/Android/Sdk\")",
      "Bash(./gradlew:*)",
      "Bash(export GRADLE_USER_HOME=\"D:/Gradle\")",
      "Read(D:\\ReactNativeApp\\LanguageLearnerApp/**)",
      "Bash(npm uninstall:*)",
      "Bash(robocopy:*)",
      "Bash(xcopy:*)",
      "Bash(cd:*)",
      "Bash(dir:*)",
      "Read(C:\\Users\\sst70\\OneDrive/**)",
      "Read(D:\\ReactNativeApp\\LanguageLearnerApp/**)",
      "Bash(npm run android:*)",
      "Bash(adb:*)",
      "Bash(npx create-expo-app:*)",
      "Bash(python:*)",
      "Bash(npx expo start:*)",
      "Bash(start http://localhost:8082)",
      "Bash(start http://localhost:8084)",
      "Bash(start http://localhost:19000)",
      "Read(c:\\Users\\sst70\\OneDrive\\바탕 화면\\Node\\Language-learner-webapp-project\\app\\LanguageLearnerApp\\src\\navigation/**)",
      "Bash(start:*)",
      "Bash(rd:*)",
      "Bash(del metro.config.js)",
      "Bash(powershell:*)",
      "Bash(taskkill:*)",
      "Bash(npx expo install:*)",
      "Bash(npm run web:*)",
      "mcp__ide__getDiagnostics",
      "Bash(sed:*)",
      "Bash(del nul)",
      "Bash(rm:*)",
      "Bash(npx tsc:*)",
      "Bash(system_profiler SPUSBDataType)",
      "Bash(xcrun devicectl list:*)",
      "Bash(xcrun instruments:*)",
      "Bash(xcrun simctl list:*)",
      "Bash(sudo xcode-select:*)",
      "Bash(sudo gem install:*)",
      "Bash(pod:*)",
      "Bash(brew install:*)",
      "Bash(react-native start:*)",
      "Bash(open ios/LanguageLearnerApp.xcworkspace)",
      "Bash(npx expo run:ios:*)",
      "Bash(open:*)",
      "Bash(xcodebuild:*)",
      "Bash(pkill:*)",
      "Bash(xcrun simctl install:*)",
      "Bash(xcrun simctl launch:*)",
      "Bash(watchman watch-del-all:*)",
      "Bash(npx @react-native-community/cli:*)",
      "Bash(killall:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(do echo \"Processing $file...\")",
      "Bash(xcrun simctl shutdown:*)",
      "Bash(xcrun simctl boot:*)",
      "Bash(export EDITOR=echo)",
      "Bash(EDITOR=echo npx react-native start --reset-cache --port 8083)",
      "Bash(EDITOR=echo npx react-native start --reset-cache --port 8084)",
      "Bash(lsof:*)",
      "Read(//Users/simhyunseok/Desktop/**)",
      "Bash(pnpm prisma:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"그렇게 합시다.\" pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(pnpm start:*)",
      "Bash(pnpm add:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"네, 시딩하겠습니다.\" pnpm prisma db push --force-reset --accept-data-loss)",
      "Bash(npm cache clean:*)",
      "Bash(xcrun simctl keyboardwithsimulator:*)",
      "Bash(xcrun simctl terminate:*)",
      "Bash(kill:*)"
    ],
    "deny": [],
    "ask": []
  }
}