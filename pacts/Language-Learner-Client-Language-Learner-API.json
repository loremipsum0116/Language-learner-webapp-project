{
  "consumer": {
    "name": "Language-Learner-Client"
  },
  "interactions": [
    {
      "description": "a login request with valid credentials",
      "providerState": "user exists with valid credentials",
      "request": {
        "body": {
          "email": "test@example.com",
          "password": "validPassword123"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/api/v1/auth/login"
      },
      "response": {
        "body": {
          "refreshToken": "refresh.token.here",
          "success": true,
          "token": "jwt.token.here",
          "user": {
            "email": "test@example.com",
            "id": 1,
            "role": "user"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.refreshToken": {
            "match": "type"
          },
          "$.body.token": {
            "match": "type"
          },
          "$.body.user.email": {
            "match": "type"
          },
          "$.body.user.id": {
            "match": "type"
          },
          "$.body.user.role": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a registration request with valid data",
      "providerState": "no existing user with this email",
      "request": {
        "body": {
          "confirmPassword": "newPassword123",
          "email": "newuser@example.com",
          "password": "newPassword123"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/api/v1/auth/register"
      },
      "response": {
        "body": {
          "message": "User registered successfully",
          "success": true,
          "user": {
            "email": "newuser@example.com",
            "id": 1,
            "role": "user"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.message": {
            "match": "type"
          },
          "$.body.user.email": {
            "match": "type"
          },
          "$.body.user.id": {
            "match": "type"
          },
          "$.body.user.role": {
            "match": "type"
          }
        },
        "status": 201
      }
    },
    {
      "description": "a request for A1 level vocabulary",
      "providerState": "A1 level vocabulary exists",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "GET",
        "path": "/api/v1/vocab",
        "query": "level=A1"
      },
      "response": {
        "body": {
          "data": [
            {
              "category": "adjectives",
              "id": 1,
              "level": "A1",
              "meaning": "fundamental",
              "word": "basic"
            }
          ],
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data": {
            "match": "type",
            "min": 1
          },
          "$.body.data[*].category": {
            "match": "type"
          },
          "$.body.data[*].id": {
            "match": "type"
          },
          "$.body.data[*].level": {
            "match": "type"
          },
          "$.body.data[*].meaning": {
            "match": "type"
          },
          "$.body.data[*].word": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a request for review items",
      "providerState": "user has review items available",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "GET",
        "path": "/api/v1/srs/reviews",
        "query": "limit=10"
      },
      "response": {
        "body": {
          "data": {
            "newItems": 5,
            "reviewItems": [
              {
                "easeFactor": 2.5,
                "id": 1,
                "interval": 86400,
                "level": 1,
                "meaning": "a greeting",
                "nextReviewAt": "2024-01-01T10:00:00Z",
                "vocabularyId": 101,
                "word": "hello"
              }
            ],
            "totalReviews": 25
          },
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data.newItems": {
            "match": "type"
          },
          "$.body.data.reviewItems": {
            "match": "type",
            "min": 1
          },
          "$.body.data.reviewItems[*].easeFactor": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].id": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].interval": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].level": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].meaning": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].nextReviewAt": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].vocabularyId": {
            "match": "type"
          },
          "$.body.data.reviewItems[*].word": {
            "match": "type"
          },
          "$.body.data.totalReviews": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a request for user study statistics",
      "providerState": "user exists with study statistics",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "GET",
        "path": "/api/v1/srs/stats/1"
      },
      "response": {
        "body": {
          "data": {
            "accuracyRate": 85.5,
            "levelDistribution": {
              "level1": 30,
              "level2": 40,
              "level3": 35,
              "level4": 25,
              "level5": 20
            },
            "monthlyProgress": [
              {
                "itemsLearned": 45,
                "month": "2024-01",
                "reviewsCompleted": 320
              }
            ],
            "reviewsToday": 25,
            "streakDays": 7,
            "totalItems": 150,
            "userId": 1
          },
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data.accuracyRate": {
            "match": "type"
          },
          "$.body.data.levelDistribution.level1": {
            "match": "type"
          },
          "$.body.data.levelDistribution.level2": {
            "match": "type"
          },
          "$.body.data.levelDistribution.level3": {
            "match": "type"
          },
          "$.body.data.levelDistribution.level4": {
            "match": "type"
          },
          "$.body.data.levelDistribution.level5": {
            "match": "type"
          },
          "$.body.data.monthlyProgress": {
            "match": "type",
            "min": 1
          },
          "$.body.data.monthlyProgress[*].itemsLearned": {
            "match": "type"
          },
          "$.body.data.monthlyProgress[*].month": {
            "match": "type"
          },
          "$.body.data.monthlyProgress[*].reviewsCompleted": {
            "match": "type"
          },
          "$.body.data.reviewsToday": {
            "match": "type"
          },
          "$.body.data.streakDays": {
            "match": "type"
          },
          "$.body.data.totalItems": {
            "match": "type"
          },
          "$.body.data.userId": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a request to add new vocabulary",
      "providerState": "authenticated user",
      "request": {
        "body": {
          "category": "adjectives",
          "level": "B1",
          "meaning": "extremely good",
          "pronunciation": "/ˈwʌndərfəl/",
          "word": "wonderful"
        },
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "POST",
        "path": "/api/v1/vocab"
      },
      "response": {
        "body": {
          "data": {
            "category": "adjectives",
            "id": 123,
            "level": "B1",
            "meaning": "extremely good",
            "pronunciation": "/ˈwʌndərfəl/",
            "word": "wonderful"
          },
          "message": "Vocabulary added successfully",
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data.category": {
            "match": "type"
          },
          "$.body.data.id": {
            "match": "type"
          },
          "$.body.data.level": {
            "match": "type"
          },
          "$.body.data.meaning": {
            "match": "type"
          },
          "$.body.data.pronunciation": {
            "match": "type"
          },
          "$.body.data.word": {
            "match": "type"
          },
          "$.body.message": {
            "match": "type"
          }
        },
        "status": 201
      }
    },
    {
      "description": "a request to add vocabulary without auth token",
      "providerState": "unauthenticated user",
      "request": {
        "body": {
          "meaning": "test meaning",
          "word": "test"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/api/v1/vocab"
      },
      "response": {
        "body": {
          "error": "Authentication required",
          "success": false
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.error": {
            "match": "type"
          }
        },
        "status": 401
      }
    },
    {
      "description": "a request to delete non-existent vocabulary",
      "providerState": "vocabulary with id 999 does not exist",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "DELETE",
        "path": "/api/v1/vocab/999"
      },
      "response": {
        "body": {
          "error": "Vocabulary not found",
          "success": false
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.error": {
            "match": "type"
          }
        },
        "status": 404
      }
    },
    {
      "description": "a request to delete vocabulary",
      "providerState": "vocabulary with id 1 exists",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "DELETE",
        "path": "/api/v1/vocab/1"
      },
      "response": {
        "body": {
          "message": "Vocabulary deleted successfully",
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.message": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a request to reset non-existent SRS item",
      "providerState": "SRS item with id 999 does not exist",
      "request": {
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "POST",
        "path": "/api/v1/srs/items/999/reset"
      },
      "response": {
        "body": {
          "error": "SRS item not found",
          "success": false
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.error": {
            "match": "type"
          }
        },
        "status": 404
      }
    },
    {
      "description": "a request to update non-existent vocabulary",
      "providerState": "vocabulary with id 999 does not exist",
      "request": {
        "body": {
          "meaning": "updated meaning"
        },
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "PUT",
        "path": "/api/v1/vocab/999"
      },
      "response": {
        "body": {
          "error": "Vocabulary not found",
          "success": false
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.error": {
            "match": "type"
          }
        },
        "status": 404
      }
    },
    {
      "description": "a request to update vocabulary",
      "providerState": "vocabulary with id 1 exists",
      "request": {
        "body": {
          "level": "B2",
          "meaning": "causing great surprise or wonder"
        },
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "PUT",
        "path": "/api/v1/vocab/1"
      },
      "response": {
        "body": {
          "data": {
            "id": 1,
            "level": "B2",
            "meaning": "causing great surprise or wonder",
            "word": "amazing"
          },
          "message": "Vocabulary updated successfully",
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data.id": {
            "match": "type"
          },
          "$.body.data.level": {
            "match": "type"
          },
          "$.body.data.meaning": {
            "match": "type"
          },
          "$.body.data.word": {
            "match": "type"
          },
          "$.body.message": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a review submission with correct answer",
      "providerState": "review item exists and is due for review",
      "request": {
        "body": {
          "answerType": "meaning",
          "itemId": 1,
          "quality": 4,
          "timeSpent": 3000
        },
        "headers": {
          "Authorization": "Bearer valid.jwt.token",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.header.Authorization": {
            "match": "type"
          }
        },
        "method": "POST",
        "path": "/api/v1/srs/reviews"
      },
      "response": {
        "body": {
          "data": {
            "itemId": 1,
            "newEaseFactor": 2.6,
            "newInterval": 172800,
            "newLevel": 2,
            "nextReviewAt": "2024-01-02T10:00:00Z"
          },
          "message": "Review submitted successfully",
          "success": true
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.data.itemId": {
            "match": "type"
          },
          "$.body.data.newEaseFactor": {
            "match": "type"
          },
          "$.body.data.newInterval": {
            "match": "type"
          },
          "$.body.data.newLevel": {
            "match": "type"
          },
          "$.body.data.nextReviewAt": {
            "match": "type"
          },
          "$.body.message": {
            "match": "type"
          }
        },
        "status": 200
      }
    },
    {
      "description": "a simple health check request",
      "providerState": "service is available",
      "request": {
        "method": "GET",
        "path": "/health"
      },
      "response": {
        "body": {
          "status": "ok"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 200
      }
    },
    {
      "description": "a token refresh request with valid refresh token",
      "providerState": "valid refresh token exists",
      "request": {
        "body": {
          "refreshToken": "valid.refresh.token"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/api/v1/auth/refresh"
      },
      "response": {
        "body": {
          "refreshToken": "new.refresh.token.here",
          "success": true,
          "token": "new.jwt.token.here"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.body.refreshToken": {
            "match": "type"
          },
          "$.body.token": {
            "match": "type"
          }
        },
        "status": 200
      }
    }
  ],
  "metadata": {
    "pact-js": {
      "version": "15.0.1"
    },
    "pactRust": {
      "ffi": "0.4.22",
      "models": "1.2.3"
    },
    "pactSpecification": {
      "version": "2.0.0"
    }
  },
  "provider": {
    "name": "Language-Learner-API"
  }
}